for i in `ls *_R1_001.fastq.gz|awk -F "_R1_" '{print $1}'`; do \
sample=`echo $i | cut -d'_' -f 1`; \
readgroup=`zcat ${i}_R1_001.fastq.gz|head -n 1|awk -F ":" '{print $3"."$4"."}'`$sample; \
bwa mem -M \
 -t 20 \
 -R '@RG\tID:'$readgroup'\tPL:illumina\tPU:'$readgroup'\tLB:'$sample'\tSM:'$sample \
 ./human_g1k_v37_decoy.fasta \
 ${i}_R1_001.fastq.gz ${i}_R2_001.fastq.gz > ./${i}.sam; \
done

for i in `ls *.sam|awk -F ".sam" '{print $1}'`; do \
samtools sort -m 4G -@ 20 -O bam -o ${i}.sorted.bam ${i}.sam; done
 
ls *.sorted.bam|awk -F ".bam$" '{print $1}'|parallel '\
java -Xmx90g -jar ./picard-2.6.0.jar MarkDuplicates \
 CREATE_INDEX=true \
 I={}.bam \
 O={}.dedupped.bam \
 M={}.dedup.txt'

java -jar ./picard-2.6.0.jar BedToIntervalList O=tmp.interval_list \
 I=MDv3.bed \
 SD=human_g1k_v37_decoy.dict
ls *.dedupped.bam|awk -F ".bam$" '{print $1}'|parallel ' \
java -Xmx90g -jar ./gatk-3.6.jar \
 -nt 20 \
 -T RealignerTargetCreator \
 -R ./human_g1k_v37_decoy.fasta \
 -known 1000G_phase1.indels.b37.vcf.gz \
 -known Mills_and_1000G_gold_standard.indels.b37.vcf.gz \
 -ip 50 \
 -L ./tmp.interval_list \
 -o {}.realignment.intervals \
 -I {}.bam; \
java -Xmx90g -jar ./gatk-3.6.jar \
 -T IndelRealigner \
 -R ./human_g1k_v37_decoy.fasta \
 -known 1000G_phase1.indels.b37.vcf.gz \
 -known Mills_and_1000G_gold_standard.indels.b37.vcf.gz \
 -targetIntervals {}.realignment.intervals \
 -o {}.realigned.bam \
 -I {}.bam'

ls *.realigned.bam|awk -F ".realigned" '{print $1}'|parallel ' \
java -Xmx90g -jar ./picard-2.6.0.jar CollectHsMetrics \
 VALIDATION_STRINGENCY=LENIENT \
 I={}.realigned.bam \
 O={}.HSmetrics.txt \
 R=human_g1k_v37_decoy.fasta \
 BAIT_INTERVALS=tmp.interval_list \
 PER_TARGET_COVERAGE={}.PerTargetMetrics.txt \
 TARGET_INTERVALS=tmp.interval_list'

awk '{OFS="\t"; print $1,$2-100,$3+100,$4}' MDv3.bed > tmp.bed
mkdir new;ls *.realigned.bam|awk -F ".sort" '{print $1}'|parallel -j 1 ' \
java -Xmx90g -jar ./picard-2.6.0.jar AddOrReplaceReadGroups \
    I={}.sorted.dedupped.realigned.bam O=new/{}.bam \
    RGID={} RGLB={} RGPL=illumina RGPU={} RGSM={} \
    VALIDATION_STRINGENCY=SILENT CREATE_INDEX=TRUE'
ls new/*bam| awk -F '[./]' '{ \
  if(NR==1) print "samplename,batch,phenotype"; \
  print $2","$2"call,tumor"}' > sample.csv
bcbio_nextgen.py -w template config_MDv3.yaml sample.csv new
cd sample/work; bcbio_nextgen.py ../config/sample.yaml -n 20

cd ../final/20*;gunzip *gz;mv ../../../gatk* .;mv ../../../human* .;
for i in `ls *call*vcf|awk -F "call" '{print $1}'|awk '!a[$0]++'`;do \
  perl -p -i -e 's/germline_risk/PASS/g' \
   ${i}call-mutect2-annotated.vcf
  java -Xmx30g -jar ./gatk-3.6.jar -T CombineVariants \
    --genotypemergeoption UNSORTED --filteredAreUncalled \
    -R human_g1k_v37_decoy.fasta \
     --variant:freebayes ${i}call-freebayes-annotated.vcf \
     --variant:mutect2   ${i}call-mutect2-annotated.vcf   \
     --variant:platypus  ${i}call-platypus-annotated.vcf  \
     --variant:samtools  ${i}call-samtools-annotated.vcf  \
     --variant:vardict   ${i}call-vardict-annotated.vcf  \
     --variant:varscan   ${i}call-varscan-annotated.vcf  \
    -o ${i}.vcf;
done; ls *vcf|grep -v annotated|parallel 'gzip {}'